geom_line() +
labs(title ="Vostok Ice Core CO2", x = "Years before present", y = "CO2 (ppmv)")
vostok_co2_subset <- filter(vostok_co2_data, mean_air_age > 1.1e5 & mean_air_age < 1.25e5 )
ggplot(data = vostok_co2_subset, aes(x = mean_air_age, y = co2)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core CO2", x = "Years before present", y = "CO2 (ppmv)")
fit_vostok_co2 <- lm(co2 ~ mean_air_age, data = vostok_co2_subset)
summary(fit_vostok_co2)
?read_table
vostok_temp_data <- read_table(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60)
vostok_temp_data
ggplot(data = vostok_subset, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
fit_vostok_subset <- lm(temp ~ ice_age, vostok_subset)
summary(fit_vostok_subset)
vostok_subset
knitr::opts_chunk$set(echo = TRUE)
fit_vostok_subset <- lm(temp ~ ice_age, vostok_subset)
vostok_subset <- filter(vostok_temp_data, ice_age > 1.1e5 & ice_age < 1.25e5 )
vostok_temp_data <- read_table(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60)
vostok_temp_data <- read_table(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60)
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
vostok_temp_data
vostok_temp_data <- read_table(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60)
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
vostok_temp_data <- mutate(vostok_temp_data, temp = -55.5 + (delta_d+440)/6)
ggplot(data = vostok_temp_data, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
fit_vostok <- lm(temp ~ ice_age, vostok_temp_data)
summary(fit_vostok)
vostok_subset <- filter(vostok_temp_data, ice_age > 1.1e5 & ice_age < 1.25e5 )
ggplot(data = vostok_subset, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
vostok_subset
vostok_temp_data
ggplot(data = vostok_temp_data, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
vostok_temp_data <- read_table(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60)
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
vostok_temp_data
vostok_temp_data <- read_table(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60)
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
vostok_temp_data <- mutate(vostok_temp_data, temp = -55.5 + (delta_d+440)/6)
ggplot(data = vostok_temp_data, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
vostok_temp_data <- read_delim(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60, delim = "\t")
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data <- read_delim(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60, delim = "\t")
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data <- read_delim(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60, delim = " ")
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
vostok_temp_data <- mutate(vostok_temp_data, temp = -55.5 + (delta_d+440)/6)
ggplot(data = vostok_temp_data, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
vostok_temp_data <- read_table(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60)
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
tail(vostok_temp_data)
vostok_temp_data <- read_delim(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60, delim = " ")
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
tail(vostok_temp_data)
vostok_subset
vostok_temp_data
vostok_temp_data
ggplot(data = vostok_temp_data, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
vostok_temp_data <- read_delim(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60, delim = " ")
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse)
global_temp <- read_csv('GLB.Ts.csv',skip = 1)
global_temp_annual <- select(global_temp, Year,`J-D`)
names(global_temp_annual) <- c("year","annual_temp")
global_temp_annual$annual_temp <- as.numeric(global_temp_annual$annual_temp)
fit_temp <- lm(annual_temp ~ year, data = global_temp_annual)
ggplot(data = global_temp_annual,aes(x=year, y = annual_temp)) +
geom_point() +
geom_line() +
labs(title ="Mean Annual Temperature", x = "Year", y = "Global Temperature Anomaly (degree C)")  +
geom_abline(intercept = fit_temp$coefficients[1],
slope = fit_temp$coefficients[2],
color = 'black')
summary(fit_temp)
global_temp_annual_pre1950 <- filter(global_temp_annual, year < 1950)
global_temp_annual_post1950 <- filter(global_temp_annual, year >= 1950)
fit_post1950 <- lm(annual_temp ~ year, data = global_temp_annual_post1950)
ggplot(data = global_temp_annual_post1950,aes(x=year, y = annual_temp)) +
geom_point() +
geom_line() +
labs(title ="Mean Annual Temperature", x = "Year", y = "Global Temperature Anomaly (degree C)") +
geom_abline(intercept = fit_post1950$coefficients[1],
slope = fit_post1950$coefficients[2],
color = 'black')
fit_pre1950 <- lm(annual_temp ~ year, data = global_temp_annual_pre1950)
summary(fit_pre1950)
summary(fit_post1950)
co2_data <- read_table(file = 'co2_annmean_mlo.txt', col_names = FALSE, skip = 57)
names(co2_data) <- c('year','co2','unc')
co2_data <- select(co2_data, year, co2)
ggplot(data = co2_data,aes(x=year, y = co2))+
geom_point() +
geom_line() +
labs(title ="Atmospheric CO2 (umol/mol)", x = "Year", y = "CO2")
fit_co2 <- lm(co2 ~ year, co2_data)
summary(fit_co2)
temp_co2_data <- inner_join(co2_data,global_temp_annual, by = "year")
ggplot(data = temp_co2_data, aes(x = co2, y = annual_temp))+
geom_point() +
labs(x = "CO2 (umol/mol)", y = "Global Annual Temperature (degree C)")
fit_co2_temp <- lm(annual_temp ~ co2, data = temp_co2_data)
summary(fit_co2_temp)
vostok_temp_data <- read_table(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60)
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
tail(vostok_temp_data)
vostok_temp_data <- read_delim(file = 'vostok.1999.temp.dat', col_names = FALSE,skip = 60, delim = " ")
names(vostok_temp_data) <- c("depth","ice_age",'delta_d', 'temp_var')
vostok_temp_data$depth <- as.numeric(vostok_temp_data$depth)
vostok_temp_data$ice_age <- as.numeric(vostok_temp_data$ice_age)
vostok_temp_data$delta_d <- as.numeric(vostok_temp_data$delta_d)
vostok_temp_data$temp_var <- as.numeric(vostok_temp_data$temp_var)
tail(vostok_temp_data)
vostok_temp_data <- mutate(vostok_temp_data, temp = -55.5 + (delta_d+440)/6)
ggplot(data = vostok_temp_data, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
fit_vostok <- lm(temp ~ ice_age, vostok_temp_data)
summary(fit_vostok)
vostok_subset <- filter(vostok_temp_data, ice_age > 1.1e5 & ice_age < 1.25e5 )
ggplot(data = vostok_subset, aes(x = ice_age, y = temp)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core Temperature", x = "Years before present", y = "Temperature (degree C)")
fit_vostok_subset <- lm(temp ~ ice_age, vostok_subset)
summary(fit_vostok_subset)
vostok_co2_data <- read_delim(file = 'vostok.icecore.co2.txt', col_names = FALSE,skip = 21, delim = "\t")
names(vostok_co2_data) <- c("depth","ice_age",'mean_air_age', 'co2')
vostok_co2_data$depth <- as.numeric(vostok_co2_data$depth)
vostok_co2_data$ice_age <- as.numeric(vostok_co2_data$ice_age)
vostok_co2_data$delta_d <- as.numeric(vostok_co2_data$mean_air_age)
vostok_co2_data$temp_var <- as.numeric(vostok_co2_data$co2)
ggplot(data = vostok_co2_data, aes(x = mean_air_age, y = co2)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core CO2", x = "Years before present", y = "CO2 (ppmv)")
vostok_co2_subset <- filter(vostok_co2_data, mean_air_age > 1.1e5 & mean_air_age < 1.25e5 )
ggplot(data = vostok_co2_subset, aes(x = mean_air_age, y = co2)) +
geom_point() +
geom_line() +
labs(title ="Vostok Ice Core CO2", x = "Years before present", y = "CO2 (ppmv)")
fit_vostok_co2 <- lm(co2 ~ mean_air_age, data = vostok_co2_subset)
summary(fit_vostok_co2)
install.packages('rhdf5')
install.packages("rhdf5")
BiocManager::install("rhdf5", version = "3.9")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rhdf5", version = "3.9")
library(ncdf4)
f <- "/Users/quinn/Dropbox/Research/SSC_forecasting/FCR_forecasts/test_H_2018910_2018911_F_16_2019125_16_21.nc"
nc <- nc_open(f)
sw <- ncvar_get(nc, varid = "SW_LW")
nc
sw <- ncvar_get(nc, varid = "Kw")
dim(sw)
hist(sw[,18])
hist(sw[,1])
hist(sw[1,])
hist(sw[18,])
sw[18,]
sw[2,]
sw[3,]
hist(sw[1,])
hist(sw[2,])
library(ncdf4)
f <- "/Users/quinn/Dropbox/Research/SSC_forecasting/FCR_forecasts/test_H_2018710_2018910_F_0_2019125_16_18.nc"
nc <- nc_open(f)
sw <- ncvar_get(nc, varid = "Kw")
hist(sw[3,])
sds <- rep(NA,dim(sw)[1])
for(i in length(sds)){
sds[i] <- sd(sw[1,])
}
sds
sds <- rep(NA,dim(sw)[1])
for(i in length(sds)){
sds[i] <- sd(sw[i,])
}
sds
dim(sw)
dim(sw)[1]
dim(sw)[1]
dim(sw)[1]
dim(sw)[1]
sw[1,]
sw[2,]
sw[3,]
sw[i,]
sds <- rep(NA,dim(sw)[1])
for(i in 1:length(sds)){
sds[i] <- sd(sw[i,])
}
sds
plot(sds)
if (!"mvtnorm" %in% installed.packages()) install.packages("mvtnorm")
if (!"ncdf4" %in% installed.packages()) install.packages("ncdf4")
if (!"lubridate" %in% installed.packages()) install.packages("lubridate")
if (!"glmtools" %in% installed.packages()) install.packages("glmtools",
repos=c("http://cran.rstudio.com",
"http://owi.usgs.gov/R"))
if (!"RCurl" %in% installed.packages()) install.packages("RCurl")
if (!"testit" %in% installed.packages()) install.packages("testit")
if (!"imputeTS" %in% installed.packages()) install.packages("imputeTS")
library(mvtnorm)
library(glmtools)
library(ncdf4)
library(lubridate)
library(RCurl)
library(testit)
library(imputeTS)
library(tidyr)
library(dplyr)
library(ggplot2)
folder <- "/Users/quinn/Dropbox/Research/SSC_forecasting/FLARE/"
forecast_location <- "/Users/quinn/Dropbox/Research/SSC_forecasting/FCR_forecasts/"
data_location <- "/Users/quinn/Dropbox/Research/SSC_forecasting/SCC_data/"
restart_file <- NA
spin_up_days <- 0
push_to_git <- TRUE
pull_from_git <- TRUE
reference_tzone <- "GMT"
n_enkf_members <- 1
n_ds_members <- 50
forecast_days <- 16
include_wq <- FALSE
use_ctd <- FALSE
num_forecast_periods <- NA
wait_time <- 60
GLMversion <- "GLM_3.0.0beta10"
DOWNSCALE_MET <- TRUE
FLAREversion <- "v1.0_beta.1"
sim_name <- "test"
start_day <- "2018-07-10 00:00:00" #GMT
forecast_start_day <-"2019-01-24 00:00:00" #GMT
source(paste0(folder, "/", "Rscripts/run_enkf_forecast.R"))
source(paste0(folder, "/", "Rscripts/evaluate_forecast.R"))
source(paste0(folder, "/", "Rscripts/plot_forecast.R"))
if(is.na(restart_file)){
hist_days <- as.numeric(difftime(as.POSIXct(forecast_start_day, tz = reference_tzone), as.POSIXct(start_day,tz = reference_tzone)))
out <- run_enkf_forecast(start_day= start_day,
sim_name = sim_name,
hist_days = hist_days,
forecast_days = 0,
spin_up_days = spin_up_days,
restart_file = NA,
folder = folder,
forecast_location = forecast_location,
push_to_git = push_to_git,
pull_from_git = pull_from_git,
data_location = data_location,
n_enkf_members = n_enkf_members,
n_ds_members = n_ds_members,
include_wq = include_wq,
use_ctd = use_ctd,
uncert_mode = 1,
reference_tzone,
cov_matrix = "Qt_cov_matrix_11June_11Aug_18.csv",
alpha = c(0, 0, 0),
downscaling_coeff = NA,
GLMversion,
DOWNSCALE_MET,
FLAREversion)
plot_forecast(pdf_file_name = unlist(out)[2],
output_file = unlist(out)[1],
include_wq = include_wq,
forecast_days = 0,
code_location = paste0(folder, "/Rscripts/"),
save_location = forecast_location,
data_location = data_location,
plot_summaries = FALSE,
pre_scc = FALSE,
push_to_git = push_to_git,
pull_from_git = pull_from_git,
use_ctd = use_ctd)
#ADVANCE TO NEXT DAY
start_day <- as.POSIXct(start_day, format = "%Y-%m-%d %H:%M:%S") + days(hist_days)
restart_file <- unlist(out)[1]
}else{
start_day <- as.POSIXct(start_day, format = "%Y-%m-%d %H:%M:%S")
restart_file <- restart_file
}
forecast_day_count <- 1
#ALL SUBSEQUENT DAYS
repeat{
startTime <- Sys.time()
#LOOP TO KEEP CHECKING FOR A NOAA FORECAST
forecast_avialable = FALSE
while(forecast_avialable == FALSE){
forecast_start_time <- start_day + days(1)
if(day(forecast_start_time) < 10){
forecast_day <- paste0('0',day(forecast_start_time))
}else{
forecast_day <- paste0(day(forecast_start_time))
}
if(month(forecast_start_time) < 10){
forecast_month <- paste0('0',month(forecast_start_time))
}else{
forecast_month <- paste0(month(forecast_start_time))
}
forecast_base_name <- paste0(year(forecast_start_time),forecast_month,forecast_day,'gep_all_00z.csv')
noaa_location <- paste0(data_location,'/','noaa-data')
setwd(noaa_location)
system(paste0('git pull'))
if(!file.exists(paste0(noaa_location,'/',forecast_base_name))){
print('Waiting for NOAA forecast')
Sys.sleep(wait_time)
}else{
forecast_avialable = TRUE
}
}
start_day <- paste0(strftime(start_day,format = "%Y-%m-%d",usetz = FALSE)," 00:00:00")
hist_days <- 1
spin_up_days <- 0
out <- run_enkf_forecast(start_day= start_day,
sim_name = sim_name,
hist_days = hist_days,
forecast_days = forecast_days,
spin_up_days = spin_up_days,
restart_file = restart_file,
folder = folder,
forecast_location = forecast_location,
push_to_git = push_to_git,
pull_from_git = pull_from_git,
data_location = data_location,
n_enkf_members = n_enkf_members,
n_ds_members = n_ds_members,
include_wq = include_wq,
use_ctd = use_ctd,
uncert_mode = 1,
reference_tzone,
cov_matrix = "Qt_cov_matrix_11June_11Aug_18.csv",
alpha = c(0, 0, 0),
downscaling_coeff = NA,
GLMversion,
DOWNSCALE_MET,
FLAREversion)
forecast_day_count <- forecast_day_count + 1
restart_file <- unlist(out)[1]
plot_forecast(pdf_file_name = unlist(out)[2],
output_file = unlist(out)[1],
include_wq = include_wq,
forecast_days = forecast_days,
code_location = paste0(folder, "/Rscripts/"),
save_location = forecast_location,
data_location = data_location,
plot_summaries = FALSE,
pre_scc = FALSE,
push_to_git = push_to_git,
pull_from_git = pull_from_git,
use_ctd = use_ctd)
#ADVANCE TO NEXT DAY
start_day <- as.POSIXct(start_day, format = "%Y-%m-%d %H:%M:%S") + days(1)
if(!is.na(num_forecast_periods)){
if(forecast_day_count > num_forecast_periods){
break
}
}
}
# Cross-Scale Interactions Module ####
# This module was initially developed by Carey, C.C. and K.J. Farrell. 13 Aug. 2017.
# Macrosystems EDDIE: Cross-Scale Interactions. Macrosystems EDDIE Module 2, Version 1.
# module2.macrosystemseddie.org
# Module development was supported by NSF EF 1702506.
# R code for students to work through the module activities A, B, and C.
# This module consists of 6 objectives. Activity A consists of Objectives 1-2,
# Activity B consists of Objectives 3-4, & Activity C consists of Objectives 5-6.
########## ACTIVITY A - OBJECTIVE 1 ############################################
# Download R packages and GLM files onto your computer.
install.packages('sp') # NOTE: depending on your computer, you may get output
#  that says, "There is a binary version available. Do you want to install from
#  sources that need compilation? y/n" If this pops up, type 'y' (without the
#  quotes) and hit enter. You may now be prompted to download the command line
#  developer tools in a pop-up window. Command line developer tools is a program
#  used to run modeling software. Click Install and then re-run the
#  install.packages(sp) once the install of the tools is finished. This should
#  now successfully load- when it's done, it should say 'DONE(sp)' if it worked.
install.packages('devtools') # this is another R package used to run modeling
#  software. If you get an error message that says, "package ‘devtools’ is not
#  available (for R version x.x.x)", be sure to check that your R software is up
#  to date to the most recent version.
library(sp) # load the packages you just downloaded
library(devtools)
devtools::install_github("CareyLabVT/GLMr", force = TRUE) # Download the GLMr
#  software. This may take a few minutes. If downloaded successfully, you should
#  see "DONE (GLMr)" at the end of the output.
devtools::install_github("CareyLabVT/glmtools", force = TRUE) # This step
# downloads the R packages that allow you to work with GLM in R.
library(glmtools) # Load the two packages that you need to analyze GLM output
#  NOTE: you may get lots of output messages in red at this step- if this worked
#  successfully, you should read a lot of text that starts with: "This
#  information is preliminary or provisional..."
library(GLMr) # If this worked, GLMr should load without error messages. Hooray!
glm_version() # See what version of GLM you are running- should be v.2.x.x
# CONGRATS! You've now succesfully loaded GLM onto your computer!
# Now, we will explore the files that come with your downloaded GLM files
# NOTE! Throughout the rest of the module, you will need to modify some of the
#  lines of code to run on your computer. If you need to modify a line, I put the
#  symbols ##!! at the beginning of that line's annotation.  If you do not see those
#  symbols, you do not need to edit that line of code and can run it as written.
# When working in R, we set the sim_folder to tell R where your files, scripts,
#  and model output are stored.
# To find your folder path, navigate to the 'cross_scale_interactions' folder on
# your Desktop. Right click on the folder that matches your model lake (Mendota or Sunapee),
# then select Properties (Windows) or Get Info (Mac). Look under Location (Windows)
# or Where (Mac) to find your folder path (examples below):
# Windows: C:/Users/KJF/Desktop/cross_scale_interactions/LakeName
# Mac: Users -> careylab -> Desktop -> cross_scale_interactions -> LakeName
sim_folder <- '/Users/quinn/Dropbox/Teaching/Environmental Informatics/Modules/1_CrossScaleEmergence/cross_scale_interactions/Mendota/' ##!! Edit this line
#  to define the sim_folder location for your model lake. You will need to change
#  the part after Users/ to give the name of your computer (e.g., my computer name
#  is cayelan, but yours will be different!) AND change the word LakeName to be
#  the name of your model lake (Mendota or Sunapee).
setwd(sim_folder) ## This line of code is used to reset your working directory
#  to the sim_folder. The point of this step is to make sure that any new files
#  you create (e.g., figures of output) end up together in this folder.
nml_file <- paste0(sim_folder,"/glm2.nml") # This step sets the nml_file for your
#  simulation to be in the new sim_folder location.
nml <- read_nml(nml_file) # Read in your nml file from your new directory
print(nml) # This shows you what is in your nml file.  This is the 'master script'
#  of the GLM simulation; the nml file tells the GLM model all of the initial
#  conditions about your lake, how you are defining parameters, and more - this
#  is a really important file! There should be multiple sections, including
#  glm_setup, morphometry, meteorology, etc.
plot_meteo(nml_file) # This command plots the meterological input data for the
#  simulation: short wave & long wave radiation, air temp, relative humidity,
#  etc. for the duration of the simulation.
########## ACTIVITY A - OBJECTIVE 2 ############################################
# Now, the fun part- we get to run the model and look at output!
run_glm(sim_folder, verbose=TRUE) # So simple and elegant... if this works, you
#  should see output that says "Simulation begins.." and then shows all the
#  time steps.  At the end, it should say "Run complete" if everything worked
#  ok. This may take a few minutes.
# We need to know where the output data from your simulation (the output.nc file)
#  is so that the glmtools package can plot and analyze the model output. We tell
#  R where to find the output file using the line below:
baseline <- file.path(sim_folder, 'output.nc')
# This says that the output.nc
#  file is in the sim_folder.
plot_temp(file=baseline, fig_path=FALSE)
# This plots your simulated water
#  temperatures in a heat map, where time is displayed on the x-axis, lake depth
#  is displayed on the y-axis, and the different colors represent different
#  temperatures.
install.packages("sp")
num_logical <- c(1, 2, 3, TRUE)
num_logical
char_logical <- c("a", "b", "c", TRUE)
combined_logical <- c(num_logical, char_logical)
combined_logical
num_logical <- c(1, 2, 3, FALSE)
num_logical
